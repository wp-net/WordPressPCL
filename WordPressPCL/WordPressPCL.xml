<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WordPressPCL</name>
    </assembly>
    <members>
        <member name="T:WordPressPCL.Client.Categories">
            <summary>
            Client class for interaction with Categories endpoint WP REST API
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.Categories.#ctor(WordPressPCL.Utility.HttpHelper@,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="HttpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
        </member>
        <member name="T:WordPressPCL.Client.Comments">
            <summary>
            Client class for interaction with Comments endpoint WP REST API
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.Comments.#ctor(WordPressPCL.Utility.HttpHelper@,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="HttpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
        </member>
        <member name="M:WordPressPCL.Client.Comments.GetCommentsForPost(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get comments for Post
            </summary>
            <param name="PostID">Post id</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of comments for post</returns>
        </member>
        <member name="M:WordPressPCL.Client.Comments.GetAllCommentsForPost(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get all comments for Post
            </summary>
            <param name="PostID">Post id</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of comments for post</returns>
        </member>
        <member name="M:WordPressPCL.Client.Comments.Delete(System.Int32,System.Boolean)">
            <summary>
            Force deletion of comments
            </summary>
            <param name="ID">Comment Id</param>
            <param name="force">force deletion</param>
            <returns>Result of operation</returns>
        </member>
        <member name="T:WordPressPCL.Client.CRUDOperation`2">
            <summary>
            Base class for CRUDOperation with default implementation of all necessary operations
            </summary>
            <typeparam name="TClass">DTO class</typeparam>
            <typeparam name="QClass">QueryBuilder class</typeparam>
        </member>
        <member name="P:WordPressPCL.Client.CRUDOperation`2.DefaultPath">
            <summary>
            Path to wp api EX. https://site.com/wp-json/
            </summary>
        </member>
        <member name="P:WordPressPCL.Client.CRUDOperation`2.MethodPath">
            <summary>
            path to endpoint EX. posts
            </summary>
        </member>
        <member name="P:WordPressPCL.Client.CRUDOperation`2.HttpHelper">
            <summary>
            HttpHelper object with helper method over HTTP requests
            </summary>
        </member>
        <member name="P:WordPressPCL.Client.CRUDOperation`2.ForceDeletion">
            <summary>
            Is object must be force deleted
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.CRUDOperation`2.#ctor(WordPressPCL.Utility.HttpHelper@,System.String,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="httpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
            <param name="methodPath">path to endpoint, EX. posts</param>
            <param name="forceDeletion">is objects must be force deleted</param>
        </member>
        <member name="M:WordPressPCL.Client.CRUDOperation`2.Create(`0)">
            <summary>
            Create Entity
            </summary>
            <param name="Entity">Entity object</param>
            <returns>Created object</returns>
        </member>
        <member name="M:WordPressPCL.Client.CRUDOperation`2.Delete(System.Int32)">
            <summary>
            Delete Entity
            </summary>
            <param name="ID">Entity Id</param>
            <returns>Result of operation</returns>
        </member>
        <member name="M:WordPressPCL.Client.CRUDOperation`2.Get(System.Boolean,System.Boolean)">
            <summary>
            Get latest
            </summary>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Entity by Id</returns>
        </member>
        <member name="M:WordPressPCL.Client.CRUDOperation`2.GetAll(System.Boolean,System.Boolean)">
            <summary>
            Get All
            </summary>
            <param name="embed">Include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of all result</returns>
        </member>
        <member name="M:WordPressPCL.Client.CRUDOperation`2.GetByID(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Get Entity by Id
            </summary>
            <param name="ID">ID</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Entity by Id</returns>
        </member>
        <member name="M:WordPressPCL.Client.CRUDOperation`2.Query(`1,System.Boolean)">
            <summary>
            Create a parametrized query and get a result
            </summary>
            <param name="queryBuilder">Query builder with specific parameters</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of filtered result</returns>
        </member>
        <member name="M:WordPressPCL.Client.CRUDOperation`2.Update(`0)">
            <summary>
            Update Entity
            </summary>
            <param name="Entity">Entity object</param>
            <returns>Updated object</returns>
        </member>
        <member name="T:WordPressPCL.Client.CustomRequest">
            <summary>
            Class to create custom requests
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.CustomRequest.#ctor(WordPressPCL.Utility.HttpHelper@)">
            <summary>
            Constructor
            </summary>
            <param name="httpHelper">HttpHelper class to operate with Http methods</param>
        </member>
        <member name="M:WordPressPCL.Client.CustomRequest.Create``2(System.String,``0)">
            <summary>
            Create object
            </summary>
            <typeparam name="TInput">type of input object</typeparam>
            <typeparam name="TOutput">type of result object</typeparam>
            <param name="route">path to exec request</param>
            <param name="Entity">object for creation</param>
            <returns>Created object</returns>
        </member>
        <member name="M:WordPressPCL.Client.CustomRequest.Delete(System.String)">
            <summary>
            Delete object
            </summary>
            <param name="route">path to exec delete request</param>
            <returns>Result of deletion</returns>
        </member>
        <member name="M:WordPressPCL.Client.CustomRequest.Get``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get object/s
            </summary>
            <typeparam name="TClass">type of object</typeparam>
            <param name="route">path to exec request</param>
            <param name="embed">is get embed params</param>
            <param name="useAuth">i use auth</param>
            <returns>List of objects</returns>
        </member>
        <member name="M:WordPressPCL.Client.CustomRequest.Update``2(System.String,``0)">
            <summary>
            Update object
            </summary>
            <typeparam name="TInput">type of input object</typeparam>
            <typeparam name="TOutput">type of result object</typeparam>
            <param name="route">path to exec request</param>
            <param name="Entity">object for update</param>
            <returns>Updated object</returns>
        </member>
        <member name="T:WordPressPCL.Client.Media">
            <summary>
            Client class for interaction with Media endpoint WP REST API
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.Media.#ctor(WordPressPCL.Utility.HttpHelper@,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="HttpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
        </member>
        <member name="M:WordPressPCL.Client.Media.Create(System.IO.Stream,System.String,System.String)">
            <summary>
            Create Media entity with attachment
            </summary>
            <param name="fileStream">stream with file content</param>
            <param name="filename">Name of file in WP Media Library</param>
            <param name="mimeType">Override for automatic mime type detection</param>
            <returns>Created media object</returns>
        </member>
        <member name="M:WordPressPCL.Client.Media.Delete(System.Int32)">
            <summary>
            Delete Entity
            </summary>
            <param name="ID">Entity Id</param>
            <returns>Result of operation</returns>
        </member>
        <member name="M:WordPressPCL.Client.Media.Get(System.Boolean,System.Boolean)">
            <summary>
            Get latest
            </summary>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Latest media items</returns>
        </member>
        <member name="M:WordPressPCL.Client.Media.GetAll(System.Boolean,System.Boolean)">
            <summary>
            Get All
            </summary>
            <param name="embed">Include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of all result</returns>
        </member>
        <member name="M:WordPressPCL.Client.Media.GetByID(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Get Entity by Id
            </summary>
            <param name="ID">ID</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Entity by Id</returns>
        </member>
        <member name="M:WordPressPCL.Client.Media.Query(WordPressPCL.Utility.MediaQueryBuilder,System.Boolean)">
            <summary>
            Create a parametrized query and get a result
            </summary>
            <param name="queryBuilder">Query builder with specific parameters</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of filtered result</returns>
        </member>
        <member name="M:WordPressPCL.Client.Media.Update(WordPressPCL.Models.MediaItem)">
            <summary>
            Update Entity
            </summary>
            <param name="Entity">Entity object</param>
            <returns>Updated object</returns>
        </member>
        <member name="T:WordPressPCL.Client.Pages">
            <summary>
            Client class for interaction with Pages endpoint WP REST API
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.Pages.#ctor(WordPressPCL.Utility.HttpHelper@,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="HttpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
        </member>
        <member name="M:WordPressPCL.Client.Pages.GetPagesByAuthor(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get pages by its author
            </summary>
            <param name="authorId">Author id</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of pages</returns>
        </member>
        <member name="M:WordPressPCL.Client.Pages.GetPagesBySearch(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get pages by search term
            </summary>
            <param name="searchTerm">Search term</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of pages</returns>
        </member>
        <member name="M:WordPressPCL.Client.Pages.Delete(System.Int32,System.Boolean)">
            <summary>
            Delete page with force deletion
            </summary>
            <param name="ID">Page id</param>
            <param name="force">force deletion</param>
            <returns>Result of operation</returns>
        </member>
        <member name="T:WordPressPCL.Client.PostRevisions">
            <summary>
            Client class for interaction with Post revisions endpoint WP REST API
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.PostRevisions.#ctor(WordPressPCL.Utility.HttpHelper@,System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="httpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
            <param name="postId">ID of post</param>
        </member>
        <member name="M:WordPressPCL.Client.PostRevisions.Delete(System.Int32)">
            <summary>
            Delete Entity
            </summary>
            <param name="ID">Entity Id</param>
            <returns>Result of operation</returns>
        </member>
        <member name="M:WordPressPCL.Client.PostRevisions.Get(System.Boolean,System.Boolean)">
            <summary>
            Get latest
            </summary>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Latest PostRevisions</returns>
        </member>
        <member name="M:WordPressPCL.Client.PostRevisions.GetAll(System.Boolean,System.Boolean)">
            <summary>
            Get All
            </summary>
            <param name="embed">Include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of all result</returns>
        </member>
        <member name="M:WordPressPCL.Client.PostRevisions.GetByID(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Get Entity by Id
            </summary>
            <param name="ID">ID</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Entity by Id</returns>
        </member>
        <member name="T:WordPressPCL.Client.Posts">
            <summary>
            Client class for interaction with Posts endpoint WP REST API
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.Posts.#ctor(WordPressPCL.Utility.HttpHelper@,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="HttpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
        </member>
        <member name="M:WordPressPCL.Client.Posts.GetStickyPosts(System.Boolean,System.Boolean)">
            <summary>
            Get sticky posts
            </summary>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of posts</returns>
        </member>
        <member name="M:WordPressPCL.Client.Posts.GetPostsByCategory(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get posts by category
            </summary>
            <param name="categoryId">Category Id</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of posts</returns>
        </member>
        <member name="M:WordPressPCL.Client.Posts.GetPostsByTag(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get posts by tag
            </summary>
            <param name="tagId">Tag Id</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of posts</returns>
        </member>
        <member name="M:WordPressPCL.Client.Posts.GetPostsByAuthor(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get posts by its author
            </summary>
            <param name="authorId">Author id</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of posts</returns>
        </member>
        <member name="M:WordPressPCL.Client.Posts.GetPostsBySearch(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get posts by search term
            </summary>
            <param name="searchTerm">Search term</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of posts</returns>
        </member>
        <member name="M:WordPressPCL.Client.Posts.Delete(System.Int32,System.Boolean)">
            <summary>
            Delete post with force deletion
            </summary>
            <param name="ID">Post id</param>
            <param name="force">force deletion</param>
            <returns>Result of operation</returns>
        </member>
        <member name="M:WordPressPCL.Client.Posts.Revisions(System.Int32)">
            <summary>
            Get instance ob object to manipulate with post revisions
            </summary>
            <param name="postId">ID of parent Post</param>
            <returns>Post revisions object</returns>
        </member>
        <member name="T:WordPressPCL.Client.PostStatuses">
            <summary>
            Client class for interaction with Post Types endpoint WP REST API
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.PostStatuses.#ctor(WordPressPCL.Utility.HttpHelper@,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="httpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
        </member>
        <member name="M:WordPressPCL.Client.PostStatuses.Get(System.Boolean,System.Boolean)">
            <summary>
            Get latest Post Statuses
            </summary>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Entity by Id</returns>
        </member>
        <member name="M:WordPressPCL.Client.PostStatuses.GetAll(System.Boolean,System.Boolean)">
            <summary>
            Get All
            </summary>
            <param name="embed">Include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of all result</returns>
        </member>
        <member name="M:WordPressPCL.Client.PostStatuses.GetByID(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Get Entity by Id
            </summary>
            <param name="ID">ID</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Entity by Id</returns>
        </member>
        <member name="T:WordPressPCL.Client.PostTypes">
            <summary>
            Client class for interaction with Post Types endpoint WP REST API
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.PostTypes.#ctor(WordPressPCL.Utility.HttpHelper@,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="httpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
        </member>
        <member name="M:WordPressPCL.Client.PostTypes.Get(System.Boolean,System.Boolean)">
            <summary>
            Get latest
            </summary>
            <param name="embed">Include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of latest PostTypes</returns>
        </member>
        <member name="M:WordPressPCL.Client.PostTypes.GetAll(System.Boolean,System.Boolean)">
            <summary>
            Get All
            </summary>
            <param name="embed">Include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of all PostTypes</returns>
        </member>
        <member name="M:WordPressPCL.Client.PostTypes.GetByID(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Get Entity by Id
            </summary>
            <param name="ID">ID</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Entity by Id</returns>
        </member>
        <member name="T:WordPressPCL.Client.Tags">
            <summary>
            Client class for interaction with Tags endpoint WP REST API
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.Tags.#ctor(WordPressPCL.Utility.HttpHelper@,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="HttpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
        </member>
        <member name="T:WordPressPCL.Client.Taxonomies">
            <summary>
            Client class for interaction with Taxonomies endpoint WP REST API
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.Taxonomies.#ctor(WordPressPCL.Utility.HttpHelper@,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="httpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
        </member>
        <member name="M:WordPressPCL.Client.Taxonomies.Get(System.Boolean,System.Boolean)">
            <summary>
            Get latest
            </summary>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Get latest taxonomies</returns>
        </member>
        <member name="M:WordPressPCL.Client.Taxonomies.GetAll(System.Boolean,System.Boolean)">
            <summary>
            Get All
            </summary>
            <param name="embed">Include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of all result</returns>
        </member>
        <member name="M:WordPressPCL.Client.Taxonomies.GetByID(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Get Entity by Id
            </summary>
            <param name="ID">ID</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Entity by Id</returns>
        </member>
        <member name="M:WordPressPCL.Client.Taxonomies.Query(WordPressPCL.Utility.TaxonomiesQueryBuilder,System.Boolean)">
            <summary>
            Create a parametrized query and get a result
            </summary>
            <param name="queryBuilder">Query builder with specific parameters</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of filtered result</returns>
        </member>
        <member name="T:WordPressPCL.Client.Users">
            <summary>
            Client class for interaction with Users endpoint WP REST API
            </summary>
        </member>
        <member name="M:WordPressPCL.Client.Users.#ctor(WordPressPCL.Utility.HttpHelper@,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="HttpHelper">reference to HttpHelper class for interaction with HTTP</param>
            <param name="defaultPath">path to site, EX. http://demo.com/wp-json/ </param>
        </member>
        <member name="M:WordPressPCL.Client.Users.Create(WordPressPCL.Models.User)">
            <summary>
            Create Entity
            </summary>
            <param name="Entity">Entity object</param>
            <returns>Created object</returns>
        </member>
        <member name="M:WordPressPCL.Client.Users.Get(System.Boolean,System.Boolean)">
            <summary>
            Get latest
            </summary>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Get latest users</returns>
        </member>
        <member name="M:WordPressPCL.Client.Users.GetAll(System.Boolean,System.Boolean)">
            <summary>
            Get All
            </summary>
            <param name="embed">Include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of all result</returns>
        </member>
        <member name="M:WordPressPCL.Client.Users.GetByID(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Get Entity by Id
            </summary>
            <param name="ID">ID</param>
            <param name="embed">include embed info</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>Entity by Id</returns>
        </member>
        <member name="M:WordPressPCL.Client.Users.Query(WordPressPCL.Utility.UsersQueryBuilder,System.Boolean)">
            <summary>
            Create a parametrized query and get a result
            </summary>
            <param name="queryBuilder">Query builder with specific parameters</param>
            <param name="useAuth">Send request with authentication header</param>
            <returns>List of filtered result</returns>
        </member>
        <member name="M:WordPressPCL.Client.Users.Update(WordPressPCL.Models.User)">
            <summary>
            Update Entity
            </summary>
            <param name="Entity">Entity object</param>
            <returns>Updated object</returns>
        </member>
        <member name="M:WordPressPCL.Client.Users.GetCurrentUser">
            <summary>
            Get current User
            </summary>
            <returns>Current User</returns>
        </member>
        <member name="M:WordPressPCL.rdPressPCL.Client.Users.Update(WordPressPCL.Models.User)">
            <summary>
            Update Entity
            </summary>
            <param name="Entity">Entity object</param>
            <returns>Updated object</returns>
        </member>
        <member name="M:WordPressPCL.Client.Users.GetCurrentUser">
            <summary>
            Get current User
            </summary>
            <returns>Current User</returns>
        </member>
        <member name="M:WordPressPCL.Client.Users.Delete(System.Int32,System.Int32)">
            <summary>
            Delete user with reassign articles
            </summary>
            <param name="ID">User id for delete</param>
            <param name="ReassignUserID">User id for reassign</param>
            <returns>Result of operation</returns>
        </member>
        <member name="M:WordPressPCL.Client.Users.Delete(System.Int32,WordPressPCL.Models.User)">
            <summary>
            Delete user with reassign articles
            </summary>
            <param name="ID">User id for delete</param>
            <param name="ReassignUser">User object for reassign</param>
            <returns>Result of operation</returns>
        </member>
        <member name="M:WordPressPCL.Client.Users.CreateApplicationPassword(System.String,System.String)">
            <summary>
            Create a new Application Password
            </summary>
            <param name="applicationName">User-defined name for application</param>
            <param name="userId">User ID, defaults to "me"</param>
            <returns></returns>
        </member>
        <member name="M:WordPressPCL.Client.Users.GetApplicationPasswords(System.String)">
            <summary>
            Get Application Passwords for specified user
            </summary>
            <param name="userId">User ID, defaults to "me"</param>
            <returns>List of registered Application Passwords (without the actual password)</returns>
        </member>
        <member name="T:WordPressPCL.Interfaces.ICreateOperation`1">
            <summary>
            Interface with required Create methods
            </summary>
            <typeparam name="TClass">return class type</typeparam>
        </member>
        <member name="M:WordPressPCL.Interfaces.ICreateOperation`1.Create(`0)">
            <summary>
            Create object
            </summary>
            <param name="Entity">object to create</param>
            <returns>Created object</returns>
        </member>
        <member name="T:WordPressPCL.Interfaces.IDeleteOperation">
            <summary>
            Interface with required Delete methods
            </summary>
        </member>
        <member name="M:WordPressPCL.Interfaces.IDeleteOperation.Delete(System.Int32)">
            <summary>
            Delete object by Id
            </summary>
            <param name="ID">ID ob object to delete</param>
            <returns>Result of operation</returns>
        </member>
        <member name="T:WordPressPCL.Interfaces.IQueryOperation`2">
            <summary>
            Interface with required Query methods
            </summary>
            <typeparam name="TClass">return class type</typeparam>
            <typeparam name="QClass">Query Builder class</typeparam>
        </member>
        <member name="M:WordPressPCL.Interfaces.IQueryOperation`2.Query(`1,System.Boolean)">
            <summary>
            Execute query
            </summary>
            <param name="queryBuilder">query builder with parameters for query</param>
            <param name="useAuth">Is use auth header</param>
            <returns>list of filtered objects</returns>
        </member>
        <member name="T:WordPressPCL.Interfaces.IReadOperation`1">
            <summary>
            Interface with required Get methods
            </summary>
            <typeparam name="TClass">return class type</typeparam>
        </member>
        <member name="M:WordPressPCL.Interfaces.IReadOperation`1.Get(System.Boolean,System.Boolean)">
            <summary>
            Get latest
            aram>
            <param name="useAuth">Is use auth header</param>
            <returns>requested object</returns>
        </member>
        <member name="M:WordPressPCL.Interfaces.IReadOperation`1.GetAll(System.Boolean,System.Boolean)">
            <summary>
            Get all objects
            </summary>
            <param name="embed">Is use embed info</param>
            <param name="useAuth">Is use auth header</param>
            <returns>List of objects</returns>
        </member>
        <member name="T:WordPressPCL.Interfaces.IUpdateOperation`1">
            <summary>
            Interface with required Update methods
            </summary>
            <typeparam name="TClass">return class type</typeparam>
        </member>
        <member name="M:WordPressPCL.Interfaces.IUpdateOperation`1.Update(`0)">
            <summary>
            Update entity method
            </summary>
            <param name="Entity">object to update</param>
            <returns>Updated entity</returns>
        </member>
        <member name="T:WordPressPCL.Models.AuthMethod">
            <summary>
            Authentication Methods
            <para> JWT - recommended AUTH method</para>
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.AuthMethod.JWT">
            <summary>
            JSON Web Token Authentication method by Enrique Chavez. Need configure your site with this plugin https://wordpress.org/plugins/jwt-authentication-for-wp-rest-api/
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.AuthMethod.JWTAuth">
            <summary>
            JSON Web Token Authentication method by Useful Team. Need configure your site with this plugin https://wordpress.org/plugins/jwt-auth/
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.AuthMethod.ApplicationPassword">
            <summary>
            Basic authentication using Application Passwords introduced in WordPress 5.6
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.AvatarURL">
            <summary>
            Avatar URLs for the users.
            </summary>
            <remarks>Default sizes: 24, 48, 96</remarks>
        </member>
        <member name="P:WordPressPCL.Models.AvatarURL.Size24">
            <summary>
            Avatar URL 24x24 pixels
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.AvatarURL.Size48">
            <summary>
            Avatar URL 48x48 pixels
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.AvatarURL.Size96">
            <summary>
            Avatar URL 96x96 pixels
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.BadRequest">
            <summary>
            Model for unsuccessful request
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.BadRequest.Name">
            <summary>
            Error type
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.BadRequest.Message">
            <summary>
            Error description
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.BadRequest.Data">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Base">
            <summary>
            Base class for Models
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Base.Id">
            <summary>
            Unique identifier for the object.
            </summary>
            <remarks>
            Read only
            Context: view, edit, embed
            </remarks>
        </member>
        <member name="T:WordPressPCL.Models.Category">
            <summary>
            Terms of the type category
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Category.Count">
            <summary>
            Number of published posts for the term.
            </summary>
 dentifier for the object.
            </summary>
            <remarks>
            Read only
            Context: view, edit, embed
            </remarks>
        </member>
        <member name="T:WordPressPCL.Models.Category">
            <summary>
            Terms of the type category
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Category.Count">
            <summary>
            Number of published posts for the term.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Category.Description">
            <summary>
            HTML description of the term.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Category.Parent">
            <summary>
            The parent term ID.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Category.Meta">
            <summary>
            Meta fields.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="M:WordPressPCL.Models.Category.#ctor">
            <summary>
            Parameterless constructor
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Category.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:WordPressPCL.Models.Comment">
            <summary>
            Type represent Comment Entity of WP REST API
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Comment.PostId">
            <summary>
            The id of the associated post object.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.ParentId">
            <summary>
            The id for the parent of the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.AuthorId">
            <summary>
            The id of the user object, if author was a user.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.AuthorName">
            <summary>
            Display name for the object author.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.AuthorEmail">
            <summary>
            Email address for the object author.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.AuthorUrl">
            <summary>
            URL for the object author.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.AuthorIP">
            <summary>
            IP address for the object author.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.AuthorAvatarUrls">
            <summary>
            Avatar URLs for the object author.
            <see cref="T:WordPressPCL.Models.AvatarURL"/>
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.AuthorUserAgent">
            <summary>
            User agent for the object author.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.Date">
            <summary>
            The date the object was published.
            </summary>
            <remarks>Context: view, edit,Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.Link">
            <summary>
            URL to the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.Status">
            <summary>
            State of the object.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.Type">
            <summary>
            Type of Comment for the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.Meta">
            <summary>
            Meta fields.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.Karma">
            <summary>
            Karma for the object.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Comment.Links">
            <summary>
            Links to another entities
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Comment.#ctor">
            <summary>
            Parameterless constructor
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Comment.#ctor(System.Int32,System.String)">
            <summary>
            Constructor with required parameters
            </summary>
            <param name="postId">Post ID</param>
            <param name="content">Comment content</param>
        </member>
        <member name="T:WordPressPCL.Models.CommentThreaded">
            <summary>
            An extension class for Comment that holds a depth property
            for displaying threaded comments
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.CommentThreaded.Depth">
            <summary>
            The depth of a comment
            0 is a top level comments without parent
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Embedded">
            <summary>
            Embedded Information
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Embedded.Author">
            <summary>
            Post Author
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Embedded.Replies">
            <summary>
            Comments on the post
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Embedded.WpFeaturedmedia">
            <summary>
            Featured images for the post
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Embedded.WpTerm">
            <summary>
            Terms for the post (categories, tags etc.)
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Embedded.Up">
            <summary>
            Parent page
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Status">
            <summary>
            Status of Post/Page/Media
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.Status.Publish">
            <summary>
            Publish
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.Status.Private">
            <summary>
            Private
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.Status.Future">
            <summary>
            Future publication
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.Status.Draft">
            <summary>
            Draft
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.Status.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.Status.Trash">
            <summary>
            Pending
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.OpenStatus">
            <summary>
            Status of Comments, Pings etc.
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.OpenStatus.Open">
            <summary>
            Status is open
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.OpenStatus.Closed">
            <summary>
            Status is closed
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.CommentStatus">
            <summary>
            Status of Comments
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.CommentStatus.Pending">
            <summary>
            Comment is pending to approve
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.CommentStatus.Approved">
            <summary>
            Comment Approved
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.CommentStatus.Spam">
            <summary>
            Comment is spam
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.CommentStatus.Trash">
            <summary>
            Comment is in trash
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.MediaQueryStatus">
            <summary>
            Status of Media for query builder
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaQueryStatus.Inherit">
            <summary>
            Media inherit
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaQueryStatus.Private">
            <summary>
            Media is private
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaQueryStatus.Trash">
            <summary>
            Media is in trash
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.PostsOrderBy">
            <summary>
            Sort posts collection by object attribute.
            </summary>
            <remarks>Default: date</remarks>
        </member>
        <member name="F:WordPressPCL.Models.PostsOrderBy.Date">
            <summary>
            Order By Date
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PostsOrderBy.Relevance">
            <summary>
            Order By Relevance
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PostsOrderBy.Id">
            <summary>
            Order By Id
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PostsOrderBy.Include">
            <summary>
            Order By Include
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PostsOrderBy.Title">
            <summary>
            Order By Title
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PostsOrderBy.Slug">
            <summary>
            Order By Slug
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PostsOrderBy.Author">
            <summary>
            Order By Author
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PostsOrderBy.Modified">
            <summary>
            Order By modified
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PostsOrderBy.Parent">
            <summary>
            Order By parent
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.UsersOrderBy">
            <summary>
            Sort users collection by object attribute.
            </summary>
            <remarks>Default: name</remarks>
        </member>
        <member name="F:WordPressPCL.Models.UsersOrderBy.Name">
            <summary>
            Order By Name
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.UsersOrderBy.Id">
            <summary>
            Order By Id
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.UsersOrderBy.Include">
            <summary>
            Order By Include
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.UsersOrderBy.RegisteredDate">
            <summary>
            Order By Registered Date
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.UsersOrderBy.Slug">
            <summary>
            Order By Slug
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.UsersOrderBy.Email">
            <summary>
            Order By email
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.UsersOrderBy.Url">
            <summary>
            Order By url
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.TermsOrderBy">
            <summary>
            Sort terms collection by object attribute.
            </summary>
            <remarks>Default: name</remarks>
        </member>
        <member name="F:WordPressPCL.Models.TermsOrderBy.Name">
            <summary>
            Order By Name
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.TermsOrderBy.Id">
            <summary>
            Order By Id
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.TermsOrderBy.Include">
            <summary>
            Order By Include
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.TermsOrderBy.Slug">
            <summary>
            Order By Slug
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.TermsOrderBy.TermGroup">
            <summary>
            Order By term group
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.TermsOrderBy.Description">
            <summary>
            Order By description
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.TermsOrderBy.Count">
            <summary>
            Order By count
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.MediaOrderBy">
            <summary>
            Sort posts collection by object attribute.
            </summary>
            <remarks>Default: date</remarks>
        </member>
        <member name="F:WordPressPCL.Models.MediaOrderBy.Date">
            <summary>
            Order By Date
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaOrderBy.Relevance">
            <summary>
            Order By Relevance
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaOrderBy.Id">
            <summary>
            Order By Id
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaOrderBy.Include">
            <summary>
            Order By Include
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaOrderBy.Title">
            <summary>
            Order By Title
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaOrderBy.Slug">
            <summary>
            Order By Slug
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.PagesOrderBy">
            <summary>
            Sort pages collection by object attribute.
            </summary>
            <remarks>Default: date</remarks>
        </member>
        <member name="F:WordPressPCL.Models.PagesOrderBy.Date">
            <summary>
            Order By Date
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PagesOrderBy.Relevance">
            <summary>
            Order By Relevance
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PagesOrderBy.Id">
            <summary>
            Order By Id
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PagesOrderBy.Include">
            <summary>
            Order By Include
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PagesOrderBy.Title">
            <summary>
            Order By Title
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PagesOrderBy.Slug">
            <summary>
            Order By Slug
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.PagesOrderBy.MenuOrder">
            <summary>
            Order By Menu order
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.CommentsOrderBy">
            <summary>
            Sort comments collection by object attribute.
            </summary>
            <remarks>Default: date</remarks>
        </member>
        <member name="F:WordPressPCL.Models.CommentsOrderBy.DateGmt">
            <summary>
            Order By Date
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.CommentsOrderBy.Date">
            <summary>
            Order By Date
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.CommentsOrderBy.Id">
            <summary>
            Order By Id
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.CommentsOrderBy.Include">
            <summary>
            Order By Include
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.CommentsOrderBy.Post">
            <summary>
            Order By Post
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.CommentsOrderBy.Parent">
            <summary>
            Order By Parent
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.CommentsOrderBy.Type">
            <summary>
            Order ByType
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Order">
            <summary>
            Order By direction
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.Order.DESC">
            <summary>
            Descending direction
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.Order.ASC">
            <summary>
            Ascending direction
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Context">
            <summary>
            Scope under which the request is made; determines fields present in response.
            </summary>
            <remarks>
            Default: view
            One of: view, embed, edit
            </remarks>
        </member>
        <member name="F:WordPressPCL.Models.Context.View">
            <summary>
            Available in view
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.Context.Embed">
            <summary>
            Available in Embed
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.Context.Edit">
            <summary>
            Available in edit
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.MediaType">
            <summary>
            Type of Media Item
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaType.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaType.File">
            <summary>
            File
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.MediaQueryType">
            <summary>
            Type of Media Query Item
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaQueryType.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaQueryType.Video">
            <summary>
            Video
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaQueryType.Audio">
            <summary>
            Audio
            </summary>
        </member>
        <member name="F:WordPressPCL.Models.MediaQueryType.Application">
            <summary>
            Application
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Exceptions.WPException">
            <summary>
            WordPress request exceptions
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Exceptions.WPException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Exceptions.WPException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:WordPressPCL.Models.Exceptions.WPException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:WordPressPCL.Models.Exceptions.WPException.#ctor(WordPressPCL.Models.BadRequest)">
            <summary>
            Constructor
            </summary>
            <param name="request">additional request info</param>
        </member>
        <member name="M:WordPressPCL.Models.Exceptions.WPException.#ctor(System.String,WordPressPCL.Models.BadRequest)">
            <summary>
            Constructor
            </summary>
            <param name="message">additional message</param>
            <param name="request">additional request info</param>
        </member>
        <member name="M:WordPressPCL.Models.Exceptions.WPException.#ctor(System.String,System.Exception,WordPressPCL.Models.BadRequest)">
            <summary>
            Constructor
            </summary>
            <param name="message">additional message</param>
            <param name="inner">inner exception</param>
            <param name="request">additional request info</param>
        </member>
        <member name="P:WordPressPCL.Models.Exceptions.WPException.RequestData">
            <summary>
            Bad request data info
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Exceptions.WPUnexpectedException">
            <summary>
            An exception resulting from a malformed WP response from a
            WP REST call, where the response is still a valid (but not
            successful) HTTP response. For example, the response returned
            from an endpoint that is not a WP REST endpoint
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Exceptions.WPUnexpectedException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Exceptions.WPUnexpectedException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:WordPressPCL.Models.Exceptions.WPUnexpectedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:WordPressPCL.Models.Exceptions.WPUnexpectedException.#ctor(System.Net.Http.HttpResponseMessage,System.String)">
            <summary>
            Construct a WPUnexpectedException from a response
            </summary>
            <param name="response">The raw response</param>
            <param name="resonseBody">The response body, if any</param>     
        </member>
        <member name="P:WordPressPCL.Models.Exceptions.WPUnexpectedException.Response">
            <summary>
            The response that triggered the error
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Exceptions.WPUnexpectedException.ResponseBody">
            <summary>
            The response body (if any) that was returned with the error status
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.ImageMeta">
            <summary>
            Meta info (EXIF) of image media
            <see cref="T:WordPressPCL.Models.MediaDetails"/>
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.Aperture">
            <summary>
            Aperture
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.Credit">
            <summary>
            Credit
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.Camera">
            <summary>
            Camera Model
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.Caption">
            <summary>
            Image Caption
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.CreatedTimestamp">
            <summary>
            Created Date
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.Copyright">
            <summary>
            Copyright
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.FocalLength">
            <summary>
            Focal Length
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.Iso">
            <summary>
            ISO
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.ShutterSpeed">
            <summary>
            Shutter Speed
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.Title">
            <summary>
            Image Title
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.Orientation">
            <summary>
            Orientation
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.ImageMeta.Keywords">
            <summary>
            Image keywords
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Links">
            <summary>
            Links helper class
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Links.Self">
            <summary>
            Self link
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Links.Collection">
            <summary>
            Collection of links
            <see cref="T:WordPressPCL.Models.Collection"/>
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Links.About">
            <summary>
            About info
            <see cref="T:WordPressPCL.Models.About"/>
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Links.WpPostType">
            <summary>
            WordPress post Type
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Links.Curies">
            <summary>
            Curries
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Links.Author">
            <summary>
            Author
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Links.Replies">
            <summary>
            Replies
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Links.Versions">
            <summary>
            Versions
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Links.Attachment">
            <summary>
            Attachment
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Links.FeaturedMedia">
            <summary>
            Featured media
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Links.Term">
            <summary>
            Featured media
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.MediaDetails">
            <summary>
            Details of media item
            <see cref="P:WordPressPCL.Models.MediaItem.MediaDetails"/>
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.MediaDetails.Width">
            <summary>
            Media width
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.MediaDetails.Height">
            <summary>
            Media height
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.MediaDetails.File">
            <summary>
            File
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.MediaDetails.Sizes">
            <summary>
            Sizes
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.MediaDetails.ImageMeta">
            <summary>
            Meta info of Image
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.MediaItem">
            <summary>
            Type represent Media Entity of WP REST API
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Date">
            <summary>
            The date the object was published, in the site’s timezone.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.DateGmt">
            <summary>
            The date the object was published, as GMT.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Guid">
            <summary>
            The globally unique identifier for the object.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Modified">
            <summary>
            The date the object was last modified, in the site’s timezone.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.ModifiedGmt">
            <summary>
            The date the object was last modified, as GMT.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Slug">
            <summary>
            An alphanumeric identifier for the object unique to its type.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Status">
            <summary>
            A named status for the object.
            <see cref="T:WordPressPCL.Models.Status"/>
            </summary>
            <remarks>
            Context: edit
            One of: publish, future, draft, pending, private</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Type">
            <summary>
            Type of Post for the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Link">
            <summary>
            URL to the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Title">
            <summary>
            The title for the object.
            <see cref="T:WordPressPCL.Models.Title"/>
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Author">
            <summary>
            The id for the author of the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.CommentStatus">
            <summary>
            Whether or not comments are open on the object.
            <see cref="T:WordPressPCL.Models.OpenStatus"/>
            </summary>
            <remarks>Context: view, edit
            One of: open, closed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.PingStatus">
            <summary>
            Whether or not the object can be pinged.
            <see cref="T:WordPressPCL.Models.OpenStatus"/>
            </summary>
            <remarks>Context: view, edit
            One of: open, closed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.AltText">
            <summary>
            Alternative text to display when resource is not displayed.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Caption">
            <summary>
            The caption for the resource.
            <see cref="T:WordPressPCL.Models.Caption"/>
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Description">
            <summary>
            The description for the resource.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.MediaType">
            <summary>
            Type of resource.
            <see cref="T:WordPressPCL.Models.MediaType"/>
            </summary>
            <remarks>Context: view, edit, embed
            One of: image, file</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.MimeType">
            <summary>
            MIME type of resource.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.MediaDetails">
            <summary>
            Details about the resource file, specific to its type.
            <see cref="T:WordPressPCL.Models.MediaDetails"/>
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Post">
            <summary>
            The id for the associated post of the resource.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.SourceUrl">
            <summary>
            URL to the original resource file.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Meta">
            <summary>
            Meta fields.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.MediaItem.Links">
            <summary>
            Links to related resources
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.MediaItem.#ctor">
            <summary>
            Parameterless constructor
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.MediaSize">
            <summary>
            Info about Media Size
            <see cref="P:WordPressPCL.Models.MediaDetails.Sizes"/>
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.MediaSize.File">
            <summary>
            File
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.MediaSize.Width">
            <summary>
            Media Width
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.MediaSize.Height">
            <summary>
            Media Height
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.MediaSize.MimeType">
            <summary>
            Mime Type
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.MediaSize.SourceUrl">
            <summary>
            Url of source media
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Page">
            <summary>
            Type represents Page Entity of WP REST API
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Page.Date">
            <summary>
            The date the object was published, in the site’s timezone.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.DateGmt">
            <summary>
            The date the object was published, as GMT.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Guid">
            <summary>
            The globally unique identifier for the object.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Modified">
            <summary>
            The date the object was last modified, in the site’s timezone.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.ModifiedGmt">
            <summary>
            The date the object was last modified, as GMT.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Slug">
            <summary>
            An alphanumeric identifier for the object unique to its type.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Status">
            <summary>
            A named status for the object.
            </summary>
            <remarks>
            Context: edit
            One of: publish, future, draft, pending, private, trash
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Type">
            <summary>
            Type of Post for the object.
            </summary>
            <remarks>
            Read only
            Context: view, edit, embed
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Link">
            <summary>
            URL to the object.
            </summary>
            <remarks>
            Read only
            Context: view, edit, embed
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Title">
            <summary>
            The title for the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Content">
            <summary>
            The content for the object.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Excerpt">
            <summary>
            The excerpt for the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Author">
            <summary>
            The id for the author of the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.FeaturedMedia">
            <summary>
            The id of the featured media for the object.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Parent">
            <summary>
            The id for the parent of the object.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.MenuOrder">
            <summary>
            The order of the object in relation to other object of its type.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.CommentStatus">
            <summary>
            Whether or not comments are open on the object.
            </summary>
            <remarks>
            Context: view, edit
            One of: open, closed
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.PingStatus">
            <summary>
            Whether or not the object can be pinged.
            </summary>
            <remarks>
            Context: view, edit
            One of: open, closed
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Template">
            <summary>
            The theme file to use to display the object.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Meta">
            <summary>
            Meta fields.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Page.Links">
            <summary>
            Links to related resources
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Page.Embedded">
            <summary>
            Embedded information like featured images
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Page.#ctor">
            <summary>
            Parameterless constructor
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Post">
            <summary>
            Type represents Entity Post of WP REST API
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Post.Date">
            <summary>
            The date the object was published, in the site's timezone.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.DateGmt">
            <summary>
            The date the object was published, as GMT.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Guid">
            <summary>
            The globally unique identifier for the object.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Modified">
            <summary>
            The date the object was last modified, in the site's timezone.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.ModifiedGmt">
            <summary>
            The date the object was last modified, as GMT.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Password">
            <summary>
            A password to protect access to the content and excerpt.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Slug">
            <summary>
            An alphanumeric identifier for the object unique to its type.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Status">
            <summary>
            A named status for the object.
            </summary>
            <remarks>
            Context: edit
            One of: publish, future, draft, pending, private, trash
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Type">
            <summary>
            Type of Post for the object.
            </summary>
            <remarks>
            Read only
            Context: view, edit, embed
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Title">
            <summary>
            The title for the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Link">
            <summary>
            URL to the object.
            </summary>
            <remarks>
            Read only
            Context: view, edit, embed
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Content">
            <summary>
            The content for the object.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Excerpt">
            <summary>
            The excerpt for the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Author">
            <summary>
            The ID for the author of the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.FeaturedMedia">
            <summary>
            The ID of the featured media for the object.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.CommentStatus">
            <summary>
            Whether or not comments are open on the object.
            </summary>
            <remarks>
            Context: view, edit
            One of: open, closed
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.PingStatus">
            <summary>
            Whether or not the object can be pinged.
            </summary>
            <remarks>
            Context: view, edit
            One of: open, closed
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Sticky">
            <summary>
            Whether or not the object should be treated as sticky.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Format">
            <summary>
            The format for the object.
            </summary>
            <remarks>
            Context: view, edit
            One of: standard
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Categories">
            <summary>
            The terms assigned to the object in the category taxonomy.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Tags">
            <summary>
            The terms assigned to the object in the post_tag taxonomy.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Template">
            <summary>
            The theme file to use to display the object.
            </summary>
            <remarks>
            Context: view, edit
            One of:
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.LiveblogLikes">
            <summary>
            The number of Liveblog Likes the post has.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Meta">
            <summary>
            Meta fields.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Post.Links">
            <summary>
            Links to related resources
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Post.Embedded">
            <summary>
            Embedded information like featured images
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Post.#ctor">
            <summary>
            Parameterless constructor
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.PostRevision">
            <summary>
            Type represents Entity Post Revision of WP REST API
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Author">
            <summary>
            The ID for the author of the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Date">
            <summary>
            The date the object was published, in the site's timezone.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.DateGmt">
            <summary>
            The date the object was published, as GMT.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Guid">
            <summary>
            The globally unique identifier for the object.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Modified">
            <summary>
            The date the object was last modified, in the site's timezone.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.ModifiedGmt">
            <summary>
            The date the object was last modified, as GMT.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Parent">
            <summary>
            The id for the parent of the object.
            </summary>
            <remarks>Context: view</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Slug">
            <summary>
            An alphanumeric identifier for the object unique to its type.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Title">
            <summary>
            The title for the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Content">
            <summary>
            The content for the object.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Excerpt">
            <summary>
            The excerpt for the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Meta">
            <summary>
            Meta fields.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Links">
            <summary>
            Links to related resources
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.PostRevision.Embedded">
            <summary>
            Embedded information like featured images
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.PostRevision.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.PostStatus">
            <summary>
            Type represents Post Status Entity of WP REST API
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.PostStatus.Name">
            <summary>
            The title for the taxonomy.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostStatus.Private">
            <summary>
            Whether posts with this resource should be private.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostStatus.Protected">
            <summary>
            Whether posts with this resource should be protected.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostStatus.Public">
            <summary>
            Whether posts with this resource should be public.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostStatus.Queryable">
            <summary>
            Whether posts with this resource should be publicly-queryable.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostStatus.ShowInList">
            <summary>
            Whether to include posts in the edit listing for their post type.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostStatus.Slug">
            <summary>
            An alphanumeric identifier for the taxonomy.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostStatus.Links">
            <summary>
            Links to related resources
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.PostStatus.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.PostType">
            <summary>
            Type represents Post Type Entity of WP REST API
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.PostType.Capabilities">
            <summary>
            All capabilities used by the taxonomy.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostType.Description">
            <summary>
            A human-readable description of the taxonomy.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostType.Hierarchical">
            <summary>
            Whether or not the taxonomy should have children.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostType.Labels">
            <summary>
            Human-readable labels for the taxonomy for various contexts.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostType.Name">
            <summary>
            The title for the taxonomy.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostType.Slug">
            <summary>
            An alphanumeric identifier for the taxonomy.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostType.ShowCloud">
            <summary>
            Whether or not the term cloud should be displayed.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostType.Taxonomies">
            <summary>
            List of taxonomies
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostType.RestBase">
            <summary>
            REST base route for the taxonomy.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostType.Links">
            <summary>
         dels.PostType.Taxonomies">
            <summary>
            List of taxonomies
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostType.RestBase">
            <summary>
            REST base route for the taxonomy.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.PostType.Links">
            <summary>
            Links to related resources
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.PostType.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.QueryResult`1">
            <summary>
            Base class for query results
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Settings">
            <summary>
            WordPress main settings
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.Title">
            <summary>
            Site title.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.Description">
            <summary>
            Site description.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.Url">
            <summary>
            Site URL.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.Email">
            <summary>
            This address is used for admin purposes. If you change this we will send you an email at your new address to confirm it. The new address will not become active until confirmed.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.Timezone">
            <summary>
            A city in the same timezone as you.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.DateFormat">
            <summary>
            A date format for all date strings.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.TimeFormat">
            <summary>
            A time format for all time strings.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.StartOfWeek">
            <summary>
            A day number of the week that the week should start on.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.Language">
            <summary>
            WordPress locale code.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.UseSmilies">
            <summary>
            Convert emoticons like :-) and :-P to graphics on display.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.DefaultCategory">
            <summary>
            Default category.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.DefaultPostFormat">
            <summary>
            Default post format.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.PostsPerPage">
            <summary>
            Blog pages show at most.
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.DefaultPingStatus">
            <summary>
            Default Ping Status
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Settings.DefaultCommentStatus">
            <summary>
            Default Comment Status
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.RenderedRawBase">
            <summary>
            Adds a "Rendered" and a "Raw" property to all classes derived from this one
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.RenderedRawBase.Rendered">
            <summary>
            Rendered text
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.RenderedRawBase.Raw">
            <summary>
            Raw HTML text
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.HrefBase">
            <summary>
            Adds an Href property to all classes derived from this one
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.HrefBase.Href">
            <summary>
            URL link
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Content">
            <summary>
            The actual content of the object, Rendered and/or Raw depending on the context
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Content.IsProtected">
            <summary>
            Can content be edited
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Content.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Content.#ctor(System.String)">
            <summary>
            Constructor with same fields for Raw end Rendered
            </summary>
            <param name="Content">Text for Raw and rendered Content</param>
        </member>
        <member name="M:WordPressPCL.Models.Content.#ctor(System.String,System.String)">
            <summary>
            Constructor with Raw and Rendered content text fields
            </summary>
            <param name="ContentRaw">Raw HTML content text</param>
            <param name="ContentRendered">Rendered content text</param>
        </member>
        <member name="T:WordPressPCL.Models.Description">
            <summary>
            The actual description of the object, Rendered and/or Raw depending on the context
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Description.IsProtected">
            <summary>
            Can description be edited
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Description.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Description.#ctor(System.String)">
            <summary>
            Constructor with same fields for Raw end Rendered
            </summary>
            <param name="Description">Text for Raw and rendered description</param>
        </member>
        <member name="M:WordPressPCL.Models.Description.#ctor(System.String,System.String)">
            <summary>
            Constructor with Raw and Rendered description text fields
            </summary>
            <param name="DescriptionRaw">Raw HTML description text</param>
            <param name="DescriptionRendered">Rendered description text</param>
        </member>
        <member name="T:WordPressPCL.Models.Guid">
            <summary>
            The globally unique identifier for the object.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="T:WordPressPCL.Models.Title">
            <summary>
            The title for the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="M:WordPressPCL.Models.Title.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Title.#ctor(System.String)">
            <summary>
            Constructor with same Raw and rendered title
            </summary>
            <param name="Title">Text for title</param>
        </member>
        <member name="M:WordPressPCL.Models.Title.#ctor(System.String,System.String)">
            <summary>
            Constructor with Raw and rendered text
            </summary>
            <param name="TitleRaw">Raw HTML text for title</param>
            <param name="TitleRendered">Rendered text for title</param>
        </member>
        <member name="T:WordPressPCL.Models.Excerpt">
            <summary>
            The excerpt for the object.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Excerpt.IsProtected">
            <summary>
            Can the except be edited?
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Excerpt.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Excerpt.#ctor(System.String)">
            <summary>
            Constructor with same Raw and rendered Excerpt
            </summary>
            <param name="Excerpt">Text for Excerpt</param>
        </member>
        <member name="M:WordPressPCL.Models.Excerpt.#ctor(System.String,System.String)">
            <summary>
            Constructor with Raw and rendered text
            </summary>
            <param name="ExcerptRaw">Raw HTML text for Excerpt</param>
            <param name="ExcerptRendered">Rendered text for Excerpt</param>
        </member>
        <member name="T:WordPressPCL.Models.VersionHistory">
            <summary>
            URL to revisions
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Caption">
            <summary>
            Caption
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Caption.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Caption.#ctor(System.String)">
            <summary>
            Constructor with the same raw and rendered Caption
            </summary>
            <param name="Caption">Text for caption</param>
        </member>
        <member name="M:WordPressPCL.Models.Caption.#ctor(System.String,System.String)">
            <summary>
            Constructor with raw and rendered caption
            </summary>
            <param name="CaptionRaw">Raw text for caption</param>
            <param name="CaptionRendered">Rendered text for caption</param>
        </member>
        <member name="T:WordPressPCL.Models.HttpsApiWOrgFeaturedmedia">
            <summary>
            Multimedia http info
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.HttpsApiWOrgFeaturedmedia.Embeddable">
            <summary>
            Has embedded info
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Self">
            <summary>
            Self link
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Collection">
            <summary>
            Collection links
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.About">
            <summary>
            About link
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Author">
            <summary>
            Author link
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Author.Embeddable">
            <summary>
            Have embedded info
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Reply">
            <summary>
            Link to reply
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Reply.Embeddable">
            <summary>
            Has embedded info
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Cury">
            <summary>
            Cury link
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Cury.Name">
            <summary>
            Cury name
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Cury.Templated">
            <summary>
            Is cury templated
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.WpPostType">
            <summary>
            Post type link WP
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.HttpsApiWOrgAttachment">
            <summary>
            Attachment http Link
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.HttpsApiWOrgTerm">
            <summary>
            Term http link
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.HttpsApiWOrgTerm.Taxonomy">
            <summary>
            Taxonomy name
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.HttpsApiWOrgTerm.Embeddable">
            <summary>
            Has embedded info
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.HttpsApiWOrgMeta">
            <summary>
            Meta http link
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.HttpsApiWOrgMeta.Embeddable">
            <summary>
            Has embedded info
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Tag">
            <summary>
            Terms of the type tag
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Tag.Count">
            <summary>
            Number of published posts for the term.
            </summary>
            <remarks>
            Read only
            Context: view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Tag.Description">
            <summary>
            HTML description of the term.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Tag.Meta">
            <summary>
            Meta object
            </summary>
            <remarks>Context: view</remarks>
        </member>
        <member name="M:WordPressPCL.Models.Tag.#ctor">
            <summary>
            Parameterless constructor
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Tag.#ctor(System.String)">
            <summary>
            Constructor with required parameters
            </summary>
            <param name="name">Tag name</param>
        </member>
        <member name="T:WordPressPCL.Models.Taxonomy">
            <summary>
            Type represents Taxonomy Entity of WP REST API
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Taxonomy.Capabilities">
            <summary>
            All capabilities used by the taxonomy.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Taxonomy.Description">
            <summary>
            A human-readable description of the taxonomy.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Taxonomy.Hierarchical">
            <summary>
            Whether or not the taxonomy should have children.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Taxonomy.Labels">
            <summary>
            Human-readable labels for the taxonomy for various contexts.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Taxonomy.Name">
            <summary>
            The title for the taxonomy.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Taxonomy.Slug">
            <summary>
            An alphanumeric identifier for the taxonomy.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Taxonomy.ShowCloud">
            <summary>
            Whether or not the term cloud should be displayed.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Taxonomy.Types">
            <summary>
            Types associated with the taxonomy.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Taxonomy.RestBase">
            <summary>
            REST base route for the taxonomy.
            </summary>
            <remarks>Context: view, edit, embed</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Taxonomy.Links">
            <summary>
            Links to related resources
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Taxonomy.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.Term">
            <summary>
            This is the base class for all terms, like categories and tags
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.Term.Link">
            <summary>
            URL of the term.
            </summary>
            <remarks>
            Read only
            Context: view, embed, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Term.Name">
            <summary>
            HTML title for the term.
            </summary>
            <remarks>Context: view, embed, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Term.Slug">
            <summary>
            An alphanumeric identifier for the term unique to its type.
            </summary>
            <remarks>Context: view, embed, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.Term.Taxonomy">
            <summary>
            Type attribution for the term.
            </summary>
            <remarks>
            Read only
            Context: view, embed, edit
            One of: category, post_tag, nav_menu, link_category, post_format
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.Term.Links">
            <summary>
            Links to related resources
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.Term.#ctor">
            <summary>
            parameterless constructor
            </summary>
        </member>
        <member name="T:WordPressPCL.Models.User">
            <summary>
            Type represents Entity User of WP REST API
            </summary>
        </member>
        <member name="P:WordPressPCL.Models.User.UserName">
            <summary>
            Login name for the user.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Name">
            <summary>
            Display name for the user.
            </summary>
            <remarks>
            Context: embed, view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.FirstName">
            <summary>
            First name for the user.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.LastName">
            <summary>
            Last name for the user.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Email">
            <summary>
            The email address for the user.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Url">
            <summary>
            URL of the user.
            </summary>
            <remarks>Context: embed, view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Description">
            <summary>
            Description of the user.
            </summary>
            <remarks>Context: embed, view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Link">
            <summary>
            Author URL of the user.
            </summary>
            <remarks>
            Read only
            Context: embed, view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Locale">
            <summary>
            Locale for the user.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.NickName">
            <summary>
            The nickname for the user.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Slug">
            <summary>
            An alphanumeric identifier for the user.
            </summary>
            <remarks>Context: embed, view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.RegisteredDate">
            <summary>
            Registration date for the user.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Roles">
            <summary>
            Roles assigned to the user.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Password">
            <summary>
            Password for the user (never included).
            </summary>
            <remarks>Context:</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Capabilities">
            <summary>
            All capabilities assigned to the user.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.ExtraCapabilities">
            <summary>
            Any extra capabilities assigned to the user.
            </summary>
            <remarks>Context: edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.AvatarUrls">
            <summary>
            Avatar URLs for the user.
            </summary>
            <remarks>
            Read only
            Context: embed, view, edit
            </remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Meta">
            <summary>
            Meta fields.
            </summary>
            <remarks>Context: view, edit</remarks>
        </member>
        <member name="P:WordPressPCL.Models.User.Links">
            <summary>
            Links to related resources
            </summary>
        </member>
        <member name="M:WordPressPCL.Models.User.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor with required parameters
            </summary>
            <param name="userName">Username</param>
            <param name="email">Email</param>
            <param name="password">Password</param>
        </member>
        <member name="M:WordPressPCL.Models.User.#ctor">
            <summary>
            parameterless constructor
            </summary>
        </member>
        <member name="T:WordPressPCL.Utility.CategoriesQueryBuilder">
            <summary>
            Category Query Builder class to construct queries with valid parameters
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CategoriesQueryBuilder.Page">
            <summary>
            Current page of the collection.
            </summary>
            <remarks>Default: 1</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.CategoriesQueryBuilder.PerPage">
            <summary>
            Maximum number of items to be returned in result set (1-100).
            </summary>
            <remarks>Default: 10</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.CategoriesQueryBuilder.Search">
            <summary>
            Limit results to those matching a string.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CategoriesQueryBuilder.Exclude">
            <summary>
            Ensure result set excludes specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CategoriesQueryBuilder.Include">
            <summary>
            Limit result set to specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CategoriesQueryBuilder.Offset">
            <summary>
            Offset the result set by a specific number of items.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CategoriesQueryBuilder.OrderBy">
            <summary>
            Sort collection by object attribute.
            </summary>
            <remarks>Default: name
            One of: id, include, name, slug, term_group, description, count</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.CategoriesQueryBuilder.Slugs">
            <summary>
            Limit result set to users with a specific slug.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CategoriesQueryBuilder.HideEmpty">
            <summary>
            Whether to hide terms not assigned to any posts.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CategoriesQueryBuilder.Post">
            <summary>
            Limit result set to terms assigned to a specific post.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CategoriesQueryBuilder.Parent">
            <summary>
            Limit result set to terms assigned to a specific parent.
            </summary>
        </member>
        <member name="T:WordPressPCL.Utility.CommentsQueryBuilder">
            <summary>
            Comments Query Builder class to construct queries with valid parameters
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Page">
            <summary>
            Current page of the collection.
            </summary>
            <remarks>Default: 1</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.PerPage">
            <summary>
            Maximum number of items to be returned in result set (1-100).
            </summary>
            <remarks>Default: 10</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Search">
            <summary>
            Limit results to those matching a string.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.After">
            <summary>
            Limit response to posts published after a given date
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Authors">
            <summary>
            Limit result set to posts assigned to specific authors.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.AuthorsExclude">
            <summary>
            Ensure result set excludes posts assigned to specific authors.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.AuthorEmail">
            <summary>
            Limit result set to that from a specific author email. Requires authorization.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Before">
            <summary>
            Limit response to posts published before a given date
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Exclude">
            <summary>
            Ensure result set excludes specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Include">
            <summary>
            Limit result set to specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Karma">
            <summary>
            Limit result set to that of a particular comment karma. Requires authorization.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Offset">
            <summary>
            Offset the result set by a specific number of items.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.MenuOrder">
            <summary>
            Limit result set to resources with a specific menu_order value.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.OrderBy">
            <summary>
            Sort collection by object attribute.
            </summary>
            <remarks>Default: date_gmt
            One of:  date, date_gmt, id, include, post, parent, type</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Parents">
            <summary>
            Limit result set to those of particular parent ids.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.ParentsExclude">
            <summary>
            Limit result set to all items except those of a particular parent id.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Posts">
            <summary>
            Limit result set to resources assigned to specific post ids.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Statuses">
            <summary>
            Limit result set to posts assigned one or more statuses.
            </summary>
            <remarks>Default: approve</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.CommentsQueryBuilder.Type">
            <summary>
            Limit result set to comments assigned a specific type. Requires authorization.
            </summary>
            <remarks>Default: comment</remarks>
        </member>
        <member name="T:WordPressPCL.Utility.CustomCapabilitiesJsonConverter">
            <summary>
            Custom JSON converter to convert string values to boolean in capabilities and extra_capabilities properties
            <see cref="P:WordPressPCL.Models.User.Capabilities"/>
            <see cref="P:WordPressPCL.Models.User.ExtraCapabilities"/>
            </summary>
        </member>
        <member name="M:WordPressPCL.Utility.CustomCapabilitiesJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Boolean,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:WordPressPCL.Utility.CustomCapabilitiesJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:WordPressPCL.Utility.HttpHelper">
            <summary>
            Helper class encapsulates common HTTP requests methods
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.HttpHelper.JWToken">
            <summary>
            JSON Web Token
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.HttpHelper.ApplicationPassword">
            <summary>
            The Application Password to be used for authentication
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.HttpHelper.AuthMethod">
            <summary>
            Authentication Method
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.HttpHelper.UserName">
            <summary>
            The username to be used with the Application Password
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.HttpHelper.HttpResponsePreProcessing">
            <summary>
            Function called when a HttpRequest response is read
            Executed before trying to convert json content to a TClass object.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.HttpHelper.JsonSerializerSettings">
            <summary>
            Serialization/Deserialization settings for Json.NET library
            https://www.newtonsoft.com/json/help/html/SerializationSettings.htm
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.HttpHelper.LastResponseHeaders">
            <summary>
            Headers returns by WP and http server from last response
            </summary>
        </member>
        <member name="M:WordPressPCL.Utility.HttpHelper.#ctor(System.String)">
            <summary>
            Constructor
            <paramref name="wordpressURI"/>
            </summary>
            <param name="wordpressURI">base WP REST API endpoint EX. http://demo.com/wp-json/ </param>
        </member>
        <member name="M:WordPressPCL.Utility.HttpHelper.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Constructor
            <paramref name="httpClient"/>
            </summary>
            <param name="httpClient">Http client which would be used for sending requests to the WordPress API endpoint.</param>
        </member>
        <member name="T:WordPressPCL.Utility.MediaQueryBuilder">
            <summary>
            Media Query Builder class to construct queries with valid parameters
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.Page">
            <summary>
            Current page of the collection.
            </summary>
            <remarks>Default: 1</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.PerPage">
            <summary>
            Maximum number of items to be returned in result set (1-100).
            </summary>
            <remarks>Default: 10</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.Search">
            <summary>
            Limit results to those matching a string.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.After">
            <summary>
            Limit response to posts published after a given date
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.Authors">
            <summary>
            Limit result set to posts assigned to specific authors.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.AuthorsExclude">
            <summary>
            Ensure result set excludes posts assigned to specific authors.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.Before">
            <summary>
            Limit response to posts published before a given date
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.Exclude">
            <summary>
            Ensure result set excludes specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.Include">
            <summary>
            Limit result set to specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.Offset">
            <summary>
            Offset the result set by a specific number of items.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.OrderBy">
            <summary>
            Sort collection by object attribute.
            </summary>
            <remarks>Default: date
            One of: date, relevance, id, include, title, slug</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.Parents">
            <summary>
            Limit result set to those of particular parent ids.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.ParentsExclude">
            <summary>
            Limit result set to all items except those of a particular parent id.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.Slugs">
            <summary>
            Limit result set to posts with one or more specific slugs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.Statuses">
            <summary>
            Limit result set to posts assigned a specific status; can be comma-delimited list of status types.
            </summary>
            <remarks>Default:  inherit
            One of: inherit, private, trash</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.Filter">
            <summary>
            Use WP Query arguments to modify the response; private query vars require appropriate authorization.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.MediaType">
            <summary>
            Limit result set to attachments of a particular media type.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.MediaQueryBuilder.MimeType">
            <summary>
            Limit result set to attachments of a particular MIME type.
            </summary>
        </member>
        <member name="T:WordPressPCL.Utility.MimeTypeHelper">
            <summary>
            Helper class with common methods to operate with MIME Type
            </summary>
        </member>
        <member name="M:WordPressPCL.Utility.MimeTypeHelper.GetMIMETypeFromExtension(System.String)">
            <summary>
            Get MIME type of file from extension
            </summary>
            <param name="extension"></param>
            <returns></returns>
        </member>
        <member name="T:WordPressPCL.Utility.PagesQueryBuilder">
            <summary>
            Pages Query Builder class to construct queries with valid parameters
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.Page">
            <summary>
            Current page of the collection.
            </summary>
            <remarks>Default: 1</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.PerPage">
            <summary>
            Maximum number of items to be returned in result set (1-100).
            </summary>
            <remarks>Default: 10</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.Search">
            <summary>
            Limit results to those matching a string.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.After">
            <summary>
            Limit response to posts published after a given date
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.Authors">
            <summary>
            Limit result set to posts assigned to specific authors.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.AuthorsExclude">
            <summary>
            Ensure result set excludes posts assigned to specific authors.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.Before">
            <summary>
            Limit response to posts published before a given date
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.Exclude">
            <summary>
            Ensure result set excludes specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.Include">
            <summary>
            Limit result set to specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.Offset">
            <summary>
            Offset the result set by a specific number of items.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.MenuOrder">
            <summary>
            Limit result set to resources with a specific menu_order value.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.OrderBy">
            <summary>
            Sort collection by object attribute.
            </summary>
            <remarks>Default: date
            One of: date, relevance, id, include, title, slug, menu_order</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.Parents">
            <summary>
            Limit result set to those of particular parent ids.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.ParentsExclude">
            <summary>
            Limit result set to all items except those of a particular parent id.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.Slugs">
            <summary>
            Limit result set to posts with one or more specific slugs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.Statuses">
            <summary>
            Limit result set to posts assigned one or more statuses.
            </summary>
            <remarks>Default: publish</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.PagesQueryBuilder.Filter">
            <summary>
            Use WP Query arguments to modify the response; private query vars require appropriate authorization.
            </summary>
        </member>
        <member name="T:WordPressPCL.Utility.PostsQueryBuilder">
            <summary>
            Post Query Builder class to construct queries with valid parameters
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Page">
            <summary>
            Current page of the collection.
            </summary>
            <remarks>Default: 1</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.PerPage">
            <summary>
            Maximum number of items to be returned in result set (1-100).
            </summary>
            <remarks>Default: 10</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Search">
            <summary>
            Limit results to those matching a string.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.After">
            <summary>
            Limit response to posts published after a given date
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Authors">
            <summary>
            Limit result set to posts assigned to specific authors.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.AuthorsExclude">
            <summary>
            Ensure result set excludes posts assigned to specific authors.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Before">
            <summary>
            Limit response to posts published before a given date
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Exclude">
            <summary>
            Ensure result set excludes specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Include">
            <summary>
            Limit result set to specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Offset">
            <summary>
            Offset the result set by a specific number of items.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.OrderBy">
            <summary>
            Sort collection by object attribute.
            </summary>
            <remarks>Default: date
            One of: date, relevance, id, include, title, slug</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Slugs">
            <summary>
            Limit result set to posts with one or more specific slugs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Statuses">
            <summary>
            Limit result set to posts assigned one or more statuses.
            </summary>
            <remarks>Default: publish</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Categories">
            <summary>
            Limit result set to all items that have the specified term assigned in the categories taxonomy.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.CategoriesExclude">
            <summary>
            Limit result set to all items except those that have the specified term assigned in the categories taxonomy.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Tags">
            <summary>
            Limit result set to all items that have the specified term assigned in the tags taxonomy.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.TagsExclude">
            <summary>
            Limit result set to all items except those that have the specified term assigned in the tags taxonomy.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.PostsQueryBuilder.Sticky">
            <summary>
            Limit result set to items that are sticky.
            </summary>
        </member>
        <member name="T:WordPressPCL.Utility.QueryBuilder">
            <summary>
            Query builder class. Use it for create custom query
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.QueryBuilder.Order">
            <summary>
            Order direction
            </summary>
            <remarks>Default: asc</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.QueryBuilder.Embed">
            <summary>
            include embed info
            </summary>
            <remarks>Default: false</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.QueryBuilder.Context">
            <summary>
            Context of request
            </summary>
            <remarks>Default: view</remarks>
        </member>
        <member name="M:WordPressPCL.Utility.QueryBuilder.BuildQueryURL">
            <summary>
            Builds the query URL from all properties
            </summary>
            <returns>query HTTP string</returns>
        </member>
        <member name="M:WordPressPCL.Utility.QueryBuilder.GetPropertyValue(System.Object)">
            <summary>
            Use reflection to get property value
            </summary>
            <param name="property">PropertyInfo or object</param>
            <returns>property value</returns>
        </member>
        <member name="T:WordPressPCL.Utility.QueryTextAttribute">
            <summary>
            Attribute for set Text in querybuilder
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.QueryTextAttribute.Text">
            <summary>
            Text property uses in HTTP query string
            </summary>
        </member>
        <member name="M:WordPressPCL.Utility.QueryTextAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">text uses in HTTP query string</param>
        </member>
        <member name="T:WordPressPCL.Utility.TagsQueryBuilder">
            <summary>
            Tag Query Builder class to construct queries with valid parameters
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.TagsQueryBuilder.Page">
            <summary>
            Current page of the collection.
            </summary>
            <remarks>Default: 1</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.TagsQueryBuilder.PerPage">
            <summary>
            Maximum number of items to be returned in result set (1-100).
            </summary>
            <remarks>Default: 10</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.TagsQueryBuilder.Search">
            <summary>
            Limit results to those matching a string.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.TagsQueryBuilder.Exclude">
            <summary>
            Ensure result set excludes specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.TagsQueryBuilder.Include">
            <summary>
            Limit result set to specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.TagsQueryBuilder.Offset">
            <summary>
            Offset the result set by a specific number of items.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.TagsQueryBuilder.OrderBy">
            <summary>
            Sort collection by object attribute.
            </summary>
            <remarks>Default: name
            One of: id, include, name, slug, term_group, description, count</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.TagsQueryBuilder.Slugs">
            <summary>
            Limit result set to users with a specific slug.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.TagsQueryBuilder.HideEmpty">
            <summary>
            Whether to hide terms not assigned to any posts.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.TagsQueryBuilder.Post">
            <summary>
            Limit result set to terms assigned to a specific post.
            </summary>
        </member>
        <member name="T:WordPressPCL.Utility.TaxonomiesQueryBuilder">
            <summary>
            Taxonomies Query Builder class to construct queries with valid parameters
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.TaxonomiesQueryBuilder.Type">
            <summary>
            Limit results to taxonomies associated with a specific post type.
            </summary>
        </member>
        <member name="T:WordPressPCL.Utility.ThreadedCommentsHelper">
            <summary>
            Helper class to create threaded comment views
            </summary>
        </member>
        <member name="M:WordPressPCL.Utility.ThreadedCommentsHelper.GetThreadedComments(System.Collections.Generic.IEnumerable{WordPressPCL.Models.Comment},System.Int32,System.Boolean)">
            <summary>
            This method returns the comments sorted for a threaded view (oldest first)
            including the depth of a comment
            </summary>
            <param name="comments">list of comments which will be ordered</param>
            <param name="maxDepth">max hierarchy depth</param>
            <param name="isDescending">order by descending</param>
        </member>
        <member name="M:WordPressPCL.Utility.ThreadedCommentsHelper.ToThreaded(System.Collections.Generic.IEnumerable{WordPressPCL.Models.Comment},System.Boolean)">
            <summary>
            Extension method: Get Threaded comments from ordinary comments
            </summary>
            <param name="comments">Comments which will be threaded</param>
            <param name="isDescending">Newest comments should be shown first</param>
            <returns>List of threaded comments</returns>
        </member>
        <member name="T:WordPressPCL.Utility.UsersQueryBuilder">
            <summary>
            Users Query Builder class to construct queries with valid parameters
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.UsersQueryBuilder.Page">
            <summary>
            Current page of the collection.
            </summary>
            <remarks>Default: 1</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.UsersQueryBuilder.PerPage">
            <summary>
            Maximum number of items to be returned in result set (1-100).
            </summary>
            <remarks>Default: 10</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.UsersQueryBuilder.Search">
            <summary>
            Limit results to those matching a string.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.UsersQueryBuilder.Exclude">
            <summary>
            Ensure result set excludes specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.UsersQueryBuilder.Include">
            <summary>
            Limit result set to specific IDs.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.UsersQueryBuilder.Offset">
            <summary>
            Offset the result set by a specific number of items.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.UsersQueryBuilder.OrderBy">
            <summary>
            Sort collection by object attribute.
            </summary>
            <remarks>Default: name
            One of: id, include, name, registered_date, slug, email, url</remarks>
        </member>
        <member name="P:WordPressPCL.Utility.UsersQueryBuilder.Slugs">
            <summary>
            Limit result set to users with a specific slug.
            </summary>
        </member>
        <member name="P:WordPressPCL.Utility.UsersQueryBuilder.Roles">
            <summary>
            Limit result set to users matching at least one specific role provided. Accepts csv list or single role.
            </summary>
        </member>
        <member name="T:WordPressPCL.WordPressClient">
            <summary>
            Main class containing the wrapper client with all public API endpoints.
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.WordPressUri">
            <summary>
            WordPressUri holds the WordPress API endpoint, e.g. "http://demo.wp-api.org/wp-json/wp/v2/"
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.HttpResponsePreProcessing">
            <summary>
            Function called when a HttpRequest response to WordPress APIs are read
            Executed before trying to convert json content to a TClass object.
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.JsonSerializerSettings">
            <summary>
            Serialization/Deserialization settings for Json.NET library
            https://www.newtonsoft.com/json/help/html/SerializationSettings.htm
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.AuthMethod">
            <summary>
            Authentication method
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.UserName">
            <summary>
            The username to be used with the Application Password
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.Posts">
            <summary>
            Posts client interaction object
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.Comments">
            <summary>
            Comments client interaction object
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.Tags">
            <summary>
            Tags client interaction object
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.Users">
            <summary>
            Users client interaction object
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.Media">
            <summary>
            Media client interaction object
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.Categories">
            <summary>
            Categories client interaction object
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.Pages">
            <summary>
            Pages client interaction object
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.Taxonomies">
            <summary>
            Taxonomies client interaction object
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.PostTypes">
            <summary>
            Post Types client interaction object
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.PostStatuses">
            <summary>
            Post Statuses client interaction object
            </summary>
        </member>
        <member name="P:WordPressPCL.WordPressClient.CustomRequest">
            <summary>
            Custom Request client interaction object
            </summary>
        </member>
        <member name="M:WordPressPCL.WordPressClient.#ctor(System.String,System.String)">
            <summary>
                The WordPressClient holds all connection infos and provides methods to call WordPress APIs.
            </summary>
            <param name="uri">URI for WordPress API endpoint, e.g. "http://demo.wp-api.org/wp-json/"</param>
            <param name="defaultPath">Relative path to standard API endpoints, defaults to "wp/v2/"</param>
        </member>
        <member name="M:WordPressPCL.WordPressClient.#ctor(System.Net.Http.HttpClient,System.String)">
            <summary>
            The WordPressClient holds all connection infos and provides methods to call WordPress APIs.
            </summary>
            <param name="httpClient">HttpClient with BaseAddress set which will be used for sending requests to the WordPress API endpoint.</param>
            <param name="defaultPath">Relative path to standard API endpoints, defaults to "wp/v2/"</param>
        </member>
        <member name="M:WordPressPCL.WordPressClient.GetSettings">
            <summary>
            Get site settings
            </summary>
            <returns>Site settings</returns>
        </member>
        <member name="M:WordPressPCL.WordPressClient.UpdateSettings(WordPressPCL.Models.Settings)">
            <summary>
            Update site settings
            </summary>
            <param name="settings">Settings object</param>
            <returns>Updated settings</returns>
        </member>
        <member name="M:WordPressPCL.WordPressClient.RequestJWToken(System.String,System.String)">
            <summary>
            Perform authentication by JWToken
            </summary>
            <param name="Username">username</param>
            <param name="Password">password</param>
        </member>
        <member name="M:WordPressPCL.WordPressClient.Logout">
            <summary>
            Forget the JWT Auth Token, won't invalidate it serverside though
            </summary>
        </member>
        <member name="M:WordPressPCL.WordPressClient.IsValidJWToken">
            <summary>
            Check if token is valid
            </summary>
            <returns>Result of checking</returns>
        </member>
        <member name="M:WordPressPCL.WordPressClient.RemoveEmptyData(System.String)">
            <summary>
            Removes an empty data field in a Json string, e.g. when checking validity of token
            </summary>
            <param name="response">Json response input string</param>
            <returns>Json response output string</returns>
        </member>
        <member name="M:WordPressPCL.WordPressClient.SetJWToken(System.String)">
            <summary>
            Sets an existing JWToken
            </summary>
            <param name="token"></param>
        </member>
        <member name="M:WordPressPCL.WordPressClient.GetToken">
            <summary>
            Gets the JWToken from the client
            </summary>
            <returns></returns>
        </member>
        <member name="M:WordPressPCL.WordPressClient.SetApplicationPassword(System.String)">
            <summary>
            Store Application Password in the Client
            </summary>
            <param name="applictionPassword"></param>
        </member>
    </members>
</doc>
